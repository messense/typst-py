# This file is autogenerated by maturin v0.14.16
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          # Make psm compile, see https://github.com/rust-lang/stacker/issues/79
          CFLAGS_s390x_unknown_linux_gnu: "-march=z10"
          # Workaround ring 0.17 build issue
          CFLAGS_aarch64_unknown_linux_gnu: "-D__ARM_ARCH=8"
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
          before-script-linux: |
            which yum > /dev/null && yum install -y perl-IPC-Cmd
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        env:
          # Make psm compile, see https://github.com/rust-lang/stacker/issues/79
          CFLAGS_s390x_unknown_linux_gnu: "-march=z10"
          # Workaround ring 0.17 build issue
          CFLAGS_aarch64_unknown_linux_gnu: "-D__ARM_ARCH=8"
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -i python3.13t
          sccache: 'true'
          manylinux: auto
          before-script-linux: |
            which yum > /dev/null && yum install -y perl-IPC-Cmd
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: '1.7.7-beta.1'
          target: ${{ matrix.target }}
          args: --release --out dist -i python3.13t
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -i python3.13t
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    permissions:
      # Used to upload to PyPI using trusted publisher.
      id-token: write
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing *
